# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: macos-latest
    strategy:
      matrix:
        platform: [macOS, iOS, tvOS, watchOS, visionOS]
    steps:
    - uses: actions/checkout@v4
    - name: Build
      run: swift build -v
    - name: Run localnet
      run: |
        brew install aptos 
        aptos node run-local-testnet --force-restart --assume-yes &
        echo "Waiting for localnet to be ready..."
        while ! curl --output /dev/null --silent --head --fail http://127.0.0.1:8080; do
          sleep 5
        done
    - name: Run tests
      run: |
        case ${{ matrix.platform }} in
          macOS)
            swift test -v
            ;;
          iOS)
            xcodebuild test -scheme aptos-sdk-Package -destination 'platform=iOS Simulator,name=iPhone 12,OS=13.0' -enableCodeCoverage YES
            ;;
          tvOS)
            xcodebuild test -scheme aptos-sdk-Package -destination 'platform=tvOS Simulator,name=Apple TV 4K,OS=13.0' -enableCodeCoverage YES
            ;;
          watchOS)
            xcodebuild test -scheme aptos-sdk-Package -destination 'platform=watchOS Simulator,name=Apple Watch Series 6 - 44mm,OS=6.0' -enableCodeCoverage YES
            ;;
          visionOS)
            xcodebuild test -scheme aptos-sdk-Package -destination 'platform=visionOS Simulator,name=Vision Pro,OS=1.0' -enableCodeCoverage YES
            ;;
        esac
